{
  "hash": "20a8029d9b7ae92e181128afdf3601f5",
  "result": {
    "markdown": "---\ntitle: \"Linear Regression Algorithm (Maximum Likelihood)\"\nauthor: \"\"\ndate: \"2023-02-13\"\ncategories: [R, Code, Linear regression, Maximum Likelihood]\nimage: \"https://www.clipartmax.com/png/middle/124-1248944_the-future-of-ai-artificial-intelligence-logo.png\"\n---\n\n\nThis code defines three functions: **`log_likelihood`**, **`optimize_log_likelihood`**, and **`predict`**. The **`log_likelihood`** function takes three vectors **`beta`**, **`x`**, and **`y`** as input and returns the log-likelihood of the simple linear regression model. The **`optimize_log_likelihood`** function takes an initial guess for the parameters **`beta`** and two vectors **`x`** and **`y`** as input and returns the maximum likelihood estimates for the parameters. The **`predict`** function takes the estimated parameters **`beta_hat`** and an input vector **`x`** and returns the predicted output.\n\nIn this example, we generate some example data using the **`runif`** and **`rnorm`** functions, and then use the **`optimize_log_likelihood`** function to estimate the parameters of the simple linear regression model using the maximum likelihood method. Finally, we use the **`predict`** function to get the predicted output.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Define the log-likelihood function\nlog_likelihood <- function(beta, x, y) {\n  n <- length(x)\n  mu <- beta[1] + beta[2] * x\n  log_likelihood <- sum(-0.5 * log(2 * pi) - 0.5 * log(var(y)) - 0.5 * ((y - mu)^2)/var(y))\n  return(-log_likelihood)\n}\n\n# Define the function to optimize the log-likelihood function\noptimize_log_likelihood <- function(beta, x, y) {\n  result <- optim(beta, log_likelihood, x = x, y = y, method = \"BFGS\")\n  beta_hat <- result$par\n  return(beta_hat)\n}\n\n# Define the function to predict the output\npredict <- function(beta_hat, x) {\n  return(beta_hat[1] + beta_hat[2] * x)\n}\n\n# Generate some example data\nset.seed(123)\nx <- runif(100)\ny <- 2 + 3 * x + rnorm(100, 0, 0.2)\n\n# Estimate the parameters\nbeta_init <- c(0, 0)\nbeta_hat <- optimize_log_likelihood(beta_init, x, y)\n\n# Predict the output\ny_hat <- predict(beta_hat, x)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}