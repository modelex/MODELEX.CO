{
  "hash": "9324552fae7294bf5aed64cecbf654dd",
  "result": {
    "markdown": "---\ntitle: \"Linear Regression Algorithm (Least square)\"\nauthor: \"\"\ndate: \"2023-02-13\"\ncategories: [R, Code, Linear regression]\nimage: \"https://www.clipartmax.com/png/middle/124-1248944_the-future-of-ai-artificial-intelligence-logo.png\"\n---\n\n\nThis code defines two functions: **`regression`** and **`predict`**. The **`regression`** function takes two vectors **`x`** and **`y`** as input and returns the estimated intercept **`b0`** and slope **`b1`** of the simple linear regression model. The **`predict`** function takes the estimated parameters **`b0`** and **`b1`** and an input vector **`x`** and returns the predicted output.\n\nIn this example, we generate some example data using the **`runif`** and **`rnorm`** functions and then use the **`regression`** function to estimate the parameters of the simple linear regression model. Finally, we use the **`predict`** function to get the predicted output.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Define the function to estimate the parameters\nregression <- function(x, y) {\n  n <- length(x)\n  x_mean <- mean(x)\n  y_mean <- mean(y)\n  numerator <- sum((x - x_mean) * (y - y_mean))\n  denominator <- sum((x - x_mean)^2)\n  b1 <- numerator / denominator\n  b0 <- y_mean - b1 * x_mean\n  return(c(b0, b1))\n}\n\n# Define the function to predict the output\npredict <- function(b0, b1, x) {\n  return(b0 + b1 * x)\n}\n\n# Generate some example data\nset.seed(123)\nx <- runif(100)\ny <- 2 + 3 * x + rnorm(100, 0, 0.2)\n\n# Estimate the parameters\nparams <- regression(x, y)\nb0 <- params[1]\nb1 <- params[2]\n\n# Predict the output\ny_hat <- predict(b0, b1, x)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}