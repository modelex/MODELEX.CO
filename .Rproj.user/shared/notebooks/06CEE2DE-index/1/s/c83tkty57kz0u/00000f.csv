"0","muFn = function(x){"
"0","  x = sapply(x, function(x) x=0)"
"0","  x"
"0","}"
"0",""
"0","# The covariance function; here it is the squared exponential kernel."
"0","# l is the horizontal scale, sigmaf is the vertical scale."
"0","# See ?covSEiso in the gpr package for example, which is also based on Rasmussen and"
"0","# Williams Matlab code (gpml Matlab library)"
"0",""
"0","Kfn = function(x, l=1, sigmaf=1){"
"0","    sigmaf * exp( -(1/(2*l^2)) * as.matrix(dist(x, upper=T, diag=T)^2) )"
"0","}"
"0",""
"0",""
"0","#####################"
"0","### Preliminaries ###"
"0","#####################"
"0",""
"0","l = 1           # for l, sigmaf, see note at covariance function"
"0","sigmaf = 1      "
"0","keps = 1e-8     # see note at Kstarstar"
"0","nprior = 5      # number of prior draws"
"0","npostpred = 3   # number of posterior predictive draws"
"0",""
"0","##################"
"0","### Prior plot ###"
"0","##################"
"0",""
"0","# data setup"
"0","require(MASS)"
"2","Le chargement a nécessité le package : MASS
"
"2","
Attachement du package : ‘MASS’

"
"2","L'objet suivant est masqué depuis ‘package:dplyr’:

    select

"
"0","xg1 = seq(-5, 5, .2)"
"0","yg1 = mvrnorm(nprior,"
"0","              mu = muFn(xg1),"
"0","              Sigma = Kfn(xg1, l = l, sigmaf = sigmaf))"
"0",""
"0","# plot prior"
"0","library(ggplot2)"
"0","library(reshape2)"
"2","
Attachement du package : ‘reshape2’

"
"2","L'objet suivant est masqué depuis ‘package:tidyr’:

    smiths

"
"0","# reshape data for plotting"
"0","gdat = melt(data.frame("
"0","  x = xg1,"
"0","  y = t(yg1),"
"0","  sd = apply(yg1, 2, sd)"
"0","), id = c('x', 'sd'))"
"0","# head(gdat) # inspect if desired"
"0",""
"0","g1 = ggplot(aes(x = x, y = value), data = gdat) +"
"0","  geom_line(aes(group = variable), color = '#FF5500', alpha = .5) +"
"0","  labs(title = 'Prior') +"
"0","  theme_minimal()"
"0",""
"0","# g1"
"0",""
"0","#########################################"
"0","### generate noise-less training data ###"
"0","#########################################"
"0","Xtrain = c(-4, -3, -2, -1, 1)"
"0","ytrain = sin(Xtrain)"
"0","nTrain = length(Xtrain)"
"0",""
"0","Xtest = seq(-5, 5, .2)"
"0","nTest = length(Xtest)"
"0",""
"0","#####################################"
"0","### generate posterior predictive ###"
"0","#####################################"
"0",""
"0","# Create K, K*, and K** matrices as defined in the texts"
"0","K = Kfn(Xtrain, l=l, sigmaf=sigmaf)  "
"0","K_ = Kfn(c(Xtrain, Xtest), l=l, sigmaf=sigmaf)                                 # initial matrix"
"0","Kstar = K_[1:nTrain, (nTrain+1):ncol(K_)]                                      # dim = N x N*"
"0","tKstar = t(Kstar)                                                              # dim = N* x N"
"0","Kstarstar = K_[(nTrain+1):nrow(K_), (nTrain+1):ncol(K_)] + keps*diag(nTest)    # dim = N* x N*; the keps part is for positive definiteness"
"0","Kinv = solve(K)"
"0",""
"0","# calculate posterior mean and covariance"
"0","postMu = muFn(Xtest) + t(Kstar) %*% Kinv %*% (ytrain-muFn(Xtrain))"
"0","postCov = Kstarstar - t(Kstar) %*% Kinv %*% Kstar"
"0","s2 = diag(postCov)"
"0","# R = chol(postCov)  "
"0","# L = t(R)      # L is used in alternative formulation below based on gaussSample.m"
"0",""
"0","# generate draws from posterior predictive"
"0","y2 = data.frame(t(mvrnorm(npostpred, mu=postMu, Sigma=postCov)))"
"0","# y2 = data.frame(replicate(npostpred, postMu + L %*% rnorm(postMu))) # alternative"
"0",""
"0","#################################"
"0","### Posterior predictive plot ###"
"0","#################################"
"0",""
"0","# reshape data for plotting"
"0","gdat = melt(data.frame(x=Xtest, y=y2, selower=postMu-2*sqrt(s2), seupper=postMu+2*sqrt(s2)),"
"0","            id=c('x', 'selower', 'seupper'))"
"0",""
"0","g2 = ggplot(aes(x=x, y=value), data=gdat) + "
"0","  geom_ribbon(aes(ymin=selower, ymax=seupper,group=variable), fill='gray90') +"
"0","  geom_line(aes(group=variable), color='#FF5500') +"
"0","  geom_point(aes(x=Xtrain, y=ytrain), data=data.frame(Xtrain, ytrain)) +"
"0","  labs(title='Posterior Predictive') +"
"0","  theme_minimal()"
"0",""
"0","# g2"
"0",""
"0","####################################################"
"0","### Plot prior and posterior predictive together ###"
"0","####################################################"
"0",""
"0","library(gridExtra)"
"2","
Attachement du package : ‘gridExtra’

"
"2","L'objet suivant est masqué depuis ‘package:dplyr’:

    combine

"
"0","grid.arrange(g1, g2, ncol=2)"
